// Use Services external URL of the containerized services. accessible on host machine using the external port set in the container (Accessible outside the container environment)
// Not specifically from within a single container: Other containers within the same Docker network can communicate directly with this service using its internal port (8080 for HTTP, 8081 for HTTPS) and its service name (or container name if specified).

// Example:
// https://localhost:5054/catalog-service/products -> http://localhost:6000/products
// local host machine

{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "ReverseProxy": {
    "Routes": {
      "catalog-route": {
        "ClusterId": "catalog-cluster",
        "Match": {
          "Path": "/catalog-service/{**catch-all}"
        },
        "Transforms": [ { "PathPattern": "{**catch-all}" } ]
      },
      "basket-route": {
        "ClusterId": "basket-cluster",
        "Match": {
          "Path": "/basket-service/{**catch-all}"
        },
        "Transforms": [ { "PathPattern": "{**catch-all}" } ]
      },
      "ordering-route": {
        "ClusterId": "ordering-cluster",
        //"RateLimiterPolicy": "fixed",
        "Match": {
          "Path": "/ordering-service/{**catch-all}"
        },
        "Transforms": [ { "PathPattern": "{**catch-all}" } ]
      }
    },
    "Clusters": {
      "catalog-cluster": {
        "Destinations": {
          "destination1": {
            "Address": "http://localhost:6000/"
          }
        }
      },
      "basket-cluster": {
        "Destinations": {
          "destination1": {
            "Address": "http://localhost:6001/"
          }
        }
      },
      "ordering-cluster": {
        "Destinations": {
          "destination1": {
            "Address": "http://localhost:6003/"
          }
        }
      }
    }
  }
}

// http was used instead of https in the Address to avoid SSL certification exception for learning and demo purposes.



// Use Services URL in the Docker Container 

//{
//  "Logging": {
//    "LogLevel": {
//      "Default": "Information",
//      "Microsoft.AspNetCore": "Warning"
//    }
//  },
//  "AllowedHosts": "*",
//  "ReverseProxy": {
//    "Routes": {
//      "catalog-route": {
//        "ClusterId": "catalog-cluster",
//        "Match": {
//          "Path": "/catalog-service/{**catch-all}"
//        },
//        "Transforms": [ { "PathPattern": "{**catch-all}" } ]
//      },
//      "basket-route": {
//        "ClusterId": "basket-cluster",
//        "Match": {
//          "Path": "/basket-service/{**catch-all}"
//        },
//        "Transforms": [ { "PathPattern": "{**catch-all}" } ]
//      },
//      "ordering-route": {
//        "ClusterId": "ordering-cluster",
//        "RateLimiterPolicy": "fixed",
//        "Match": {
//          "Path": "/ordering-service/{**catch-all}"
//        },
//        "Transforms": [ { "PathPattern": "{**catch-all}" } ]
//      }
//    },
//    "Clusters": {
//      "catalog-cluster": {
//        "Destinations": {
//          "destination1": {
//            "Address": "http://catalog.api:8080"
//          }
//        }
//      },
//      "basket-cluster": {
//        "Destinations": {
//          "destination1": {
//            "Address": "http://basket.api:8080"
//          }
//        }
//      },
//      "ordering-cluster": {
//        "Destinations": {
//          "destination1": {
//            "Address": "http://ordering.api:8080"
//          }
//        }
//      }
//    }
//  }
//}
